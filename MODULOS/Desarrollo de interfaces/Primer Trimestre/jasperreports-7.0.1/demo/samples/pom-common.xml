<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.sf.jasperreports</groupId>
		<artifactId>jasperreports-parent</artifactId>
		<version>${revision}</version>
		<relativePath>../../pom-parent.xml</relativePath>
	</parent>
	<artifactId>jasperreports-samples-common</artifactId>
	<packaging>pom</packaging>
	<properties>
		<maven.buildNumber.doCheck>false</maven.buildNumber.doCheck>
		<sample.app.name>${sample.base.name}App</sample.app.name>
		<sample.report.name>${sample.base.name}Report</sample.report.name>
	</properties>
	<dependencies>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-jdt</artifactId>
			<version>${revision}</version>
			<exclusions>
				<exclusion>
					<groupId>net.sf.jasperreports</groupId>
					<artifactId>jasperreports</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-fonts</artifactId>
			<version>${revision}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-pdf</artifactId>
			<version>${revision}</version>
			<exclusions>
				<exclusion>
					<groupId>net.sf.jasperreports</groupId>
					<artifactId>jasperreports</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 
		JasperReports POI dependency is needed by the Swing viewers 
		even if the sample does not actually export to XLS 
		-->
		<dependency>
			<groupId>net.sf.jasperreports</groupId>
			<artifactId>jasperreports-excel-poi</artifactId>
			<version>${revision}</version>
			<exclusions>
				<exclusion>
					<groupId>net.sf.jasperreports</groupId>
					<artifactId>jasperreports</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-jcl</artifactId>
			<version>${log4j.version}</version>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.jpg</include>
					<include>**/*.png</include>
					<include>**/*.GIF</include>
					<include>**/*.gif</include>
					<include>**/*.tif</include>
					<include>**/*.webp</include>
					<!--
					<include>**/*.ico</include>
					<include>**/*TokenTypes.txt</include>
					<include>**/*.vm</include>
					<include>**/*.js</include>
					<include>**/*.css</include>
					-->
					<include>**/*.ttf</include>
					<include>**/*.otf</include>
					<!--
					<include>**/*.woff</include>
					<include>**/*.eot</include>
					-->
					<include>**/*.svg</include>
					<!--
					<include>**/*.svgz</include>
					<include>**/*.tmpl</include>
					<include>**/LICENSE.txt</include>
					-->
					<include>**/*.txt</include>
					<include>**/*.xsd</include>
				</includes>
			</resource>
			<resource>
				<directory>reports</directory>
				<includes>
					<include>**/*.jrtx</include>
				</includes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<compileSourceRoots>
						<compileSourceRoot>${project.basedir}/src</compileSourceRoot>
						<compileSourceRoot>${project.basedir}/target/reports</compileSourceRoot>
					</compileSourceRoots>
					<source>${source.version}</source>
					<target>${target.version}</target>
					<showWarnings>true</showWarnings>
					<fork>true</fork><!-- TODO lucianc is this ok? -->
					<compilerArgument>-Xlint:deprecation,-unchecked,-options</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${exec-maven-plugin.version}</version>
				<configuration>
					<mainClass>${sample.app.name}</mainClass>
					<cleanupDaemonThreads>false</cleanupDaemonThreads>
					<additionalClasspathElements>
						<additionalClasspathElement>../../common-samples/classes</additionalClasspathElement>
					</additionalClasspathElements>
					<arguments>
						<argument>test</argument>
					</arguments>
				</configuration>
				<executions>
					<!-- 
					This execution is similar to the exec:java test one above, but needed because setting the working directory
					seems to work only for the exec:exec goal. We need to set the working directory when running all the samples
					from parent folder.
					 -->
					<execution>
						<id>all</id>
						<configuration>
							<executable>mvn</executable>
							<arguments>
								<argument>exec:java@test</argument>
							</arguments>
							<workingDirectory>${project.basedir}</workingDirectory>
						</configuration>
					</execution>
					<execution>
						<id>test</id>
						<configuration>
							<mainClass>${sample.app.name}</mainClass>
							<additionalClasspathElements>
								<additionalClasspathElement>../../common-samples/classes</additionalClasspathElement>
							</additionalClasspathElements>
							<arguments>
								<argument>test</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>view</id>
						<configuration>
							<mainClass>net.sf.jasperreports.view.JasperViewer</mainClass>
							<additionalClasspathElements>
								<additionalClasspathElement>../../common-samples/classes</additionalClasspathElement>
							</additionalClasspathElements>
							<arguments>
								<argument>target/reports/${sample.report.name}.jrprint</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>viewDesign</id>
						<configuration>
							<mainClass>net.sf.jasperreports.view.JasperDesignViewer</mainClass>
							<additionalClasspathElements>
								<additionalClasspathElement>../../common-samples/classes</additionalClasspathElement>
							</additionalClasspathElements>
							<arguments>
								<argument>reports/${sample.report.name}.jrxml</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
